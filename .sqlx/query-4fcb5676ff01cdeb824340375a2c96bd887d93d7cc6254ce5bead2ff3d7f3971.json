{
  "db_name": "PostgreSQL",
  "query": "\n        SELECT\n            b.id,\n            b.title,\n            b.lang,\n            b.file_type,\n            b.year,\n            CASE WHEN b.file_type = 'fb2' THEN ARRAY['fb2', 'epub', 'mobi', 'fb2zip']::text[] ELSE ARRAY[b.file_type]::text[] END AS \"available_types!: Vec<String>\",\n            b.uploaded,\n            (\n                SELECT\n                    ARRAY_AGG(\n                        ROW(\n                            authors.id,\n                            authors.first_name,\n                            authors.last_name,\n                            authors.middle_name,\n                            EXISTS(\n                                SELECT * FROM author_annotations WHERE author = authors.id\n                            )\n                        )::author_type\n                    )\n                FROM book_authors\n                JOIN authors ON authors.id = book_authors.author\n                WHERE book_authors.book = b.id\n            ) AS \"authors!: Vec<Author>\",\n            (\n                SELECT\n                    ARRAY_AGG(\n                        ROW(\n                            authors.id,\n                            authors.first_name,\n                            authors.last_name,\n                            authors.middle_name,\n                            EXISTS(\n                                SELECT * FROM author_annotations WHERE author = authors.id\n                            )\n                        )::author_type\n                    )\n                FROM translations\n                JOIN authors ON authors.id = translations.author\n                WHERE translations.book = b.id\n            ) AS \"translators!: Vec<Author>\",\n            (\n                SELECT\n                    ARRAY_AGG(\n                        ROW(\n                            sequences.id,\n                            sequences.name\n                        )::sequence_type\n                    )\n                FROM book_sequences\n                JOIN sequences ON sequences.id = book_sequences.sequence\n                WHERE book_sequences.book = b.id\n            ) AS \"sequences!: Vec<Sequence>\",\n            EXISTS(\n                SELECT * FROM book_annotations WHERE book = b.id\n            ) AS \"annotation_exists!: bool\",\n            (\n                SELECT\n                    ROW(\n                        sources.id,\n                        sources.name\n                    )::source_type\n                FROM sources\n                WHERE sources.id = b.source\n            ) AS \"source!: Source\",\n            b.remote_id\n        FROM books b\n        WHERE lang = ANY($1) AND\n        ($2::boolean IS NULL OR is_deleted = $2) AND\n        ($3::date IS NULL OR uploaded >= $3) AND\n        ($4::date IS NULL OR uploaded <= $4) AND\n        ($5::integer IS NULL OR id >= $5) AND\n        ($6::integer IS NULL OR id <= $6)\n        ORDER BY b.id ASC\n        OFFSET $7\n        LIMIT $8\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "title",
        "type_info": "Varchar"
      },
      {
        "ordinal": 2,
        "name": "lang",
        "type_info": "Varchar"
      },
      {
        "ordinal": 3,
        "name": "file_type",
        "type_info": "Varchar"
      },
      {
        "ordinal": 4,
        "name": "year",
        "type_info": "Int2"
      },
      {
        "ordinal": 5,
        "name": "available_types!: Vec<String>",
        "type_info": "TextArray"
      },
      {
        "ordinal": 6,
        "name": "uploaded",
        "type_info": "Date"
      },
      {
        "ordinal": 7,
        "name": "authors!: Vec<Author>",
        "type_info": {
          "Custom": {
            "name": "author_type[]",
            "kind": {
              "Array": {
                "Custom": {
                  "name": "author_type",
                  "kind": {
                    "Composite": [
                      [
                        "id",
                        "Int4"
                      ],
                      [
                        "first_name",
                        "Varchar"
                      ],
                      [
                        "last_name",
                        "Varchar"
                      ],
                      [
                        "middle_name",
                        "Varchar"
                      ],
                      [
                        "annotation_exists",
                        "Bool"
                      ]
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "ordinal": 8,
        "name": "translators!: Vec<Author>",
        "type_info": {
          "Custom": {
            "name": "author_type[]",
            "kind": {
              "Array": {
                "Custom": {
                  "name": "author_type",
                  "kind": {
                    "Composite": [
                      [
                        "id",
                        "Int4"
                      ],
                      [
                        "first_name",
                        "Varchar"
                      ],
                      [
                        "last_name",
                        "Varchar"
                      ],
                      [
                        "middle_name",
                        "Varchar"
                      ],
                      [
                        "annotation_exists",
                        "Bool"
                      ]
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "ordinal": 9,
        "name": "sequences!: Vec<Sequence>",
        "type_info": {
          "Custom": {
            "name": "sequence_type[]",
            "kind": {
              "Array": {
                "Custom": {
                  "name": "sequence_type",
                  "kind": {
                    "Composite": [
                      [
                        "id",
                        "Int4"
                      ],
                      [
                        "name",
                        "Varchar"
                      ]
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "ordinal": 10,
        "name": "annotation_exists!: bool",
        "type_info": "Bool"
      },
      {
        "ordinal": 11,
        "name": "source!: Source",
        "type_info": {
          "Custom": {
            "name": "source_type",
            "kind": {
              "Composite": [
                [
                  "id",
                  "Int4"
                ],
                [
                  "name",
                  "Varchar"
                ]
              ]
            }
          }
        }
      },
      {
        "ordinal": 12,
        "name": "remote_id",
        "type_info": "Int4"
      }
    ],
    "parameters": {
      "Left": [
        "TextArray",
        "Bool",
        "Date",
        "Date",
        "Int4",
        "Int4",
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      null,
      false,
      null,
      null,
      null,
      null,
      null,
      false
    ]
  },
  "hash": "4fcb5676ff01cdeb824340375a2c96bd887d93d7cc6254ce5bead2ff3d7f3971"
}
