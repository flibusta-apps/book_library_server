{
  "db_name": "PostgreSQL",
  "query": "\n        SELECT\n            b.id,\n            b.title,\n            b.lang,\n            b.file_type,\n            b.year,\n            CASE WHEN b.file_type = 'fb2' THEN ARRAY['fb2', 'epub', 'mobi', 'fb2zip']::text[] ELSE ARRAY[b.file_type]::text[] END AS \"available_types!: Vec<String>\",\n            b.uploaded,\n            (\n                SELECT\n                    ARRAY_AGG(\n                        ROW(\n                            authors.id,\n                            authors.first_name,\n                            authors.last_name,\n                            authors.middle_name,\n                            EXISTS(\n                                SELECT * FROM author_annotations WHERE author = authors.id\n                            )\n                        )::author_type\n                    )\n                FROM book_authors\n                JOIN authors ON authors.id = book_authors.author\n                WHERE book_authors.book = b.id\n            ) AS \"authors!: Vec<Author>\",\n            (\n                SELECT\n                    ARRAY_AGG(\n                        ROW(\n                            authors.id,\n                            authors.first_name,\n                            authors.last_name,\n                            authors.middle_name,\n                            EXISTS(\n                                SELECT * FROM author_annotations WHERE author = authors.id\n                            )\n                        )::author_type\n                    )\n                FROM translations\n                JOIN authors ON authors.id = translations.author\n                WHERE translations.book = b.id\n            ) AS \"translators!: Vec<Author>\",\n            EXISTS(\n                SELECT * FROM book_annotations WHERE book = b.id\n            ) AS \"annotation_exists!: bool\",\n            bs.position\n        FROM books b\n        JOIN book_sequences bs ON b.id = bs.book\n        WHERE\n            b.is_deleted = FALSE AND\n            bs.sequence = $1 AND\n            b.lang = ANY($2)\n        ORDER BY bs.position\n        LIMIT $3 OFFSET $4\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "title",
        "type_info": "Varchar"
      },
      {
        "ordinal": 2,
        "name": "lang",
        "type_info": "Varchar"
      },
      {
        "ordinal": 3,
        "name": "file_type",
        "type_info": "Varchar"
      },
      {
        "ordinal": 4,
        "name": "year",
        "type_info": "Int2"
      },
      {
        "ordinal": 5,
        "name": "available_types!: Vec<String>",
        "type_info": "TextArray"
      },
      {
        "ordinal": 6,
        "name": "uploaded",
        "type_info": "Date"
      },
      {
        "ordinal": 7,
        "name": "authors!: Vec<Author>",
        "type_info": {
          "Custom": {
            "name": "author_type[]",
            "kind": {
              "Array": {
                "Custom": {
                  "name": "author_type",
                  "kind": {
                    "Composite": [
                      [
                        "id",
                        "Int4"
                      ],
                      [
                        "first_name",
                        "Varchar"
                      ],
                      [
                        "last_name",
                        "Varchar"
                      ],
                      [
                        "middle_name",
                        "Varchar"
                      ],
                      [
                        "annotation_exists",
                        "Bool"
                      ]
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "ordinal": 8,
        "name": "translators!: Vec<Author>",
        "type_info": {
          "Custom": {
            "name": "author_type[]",
            "kind": {
              "Array": {
                "Custom": {
                  "name": "author_type",
                  "kind": {
                    "Composite": [
                      [
                        "id",
                        "Int4"
                      ],
                      [
                        "first_name",
                        "Varchar"
                      ],
                      [
                        "last_name",
                        "Varchar"
                      ],
                      [
                        "middle_name",
                        "Varchar"
                      ],
                      [
                        "annotation_exists",
                        "Bool"
                      ]
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "ordinal": 9,
        "name": "annotation_exists!: bool",
        "type_info": "Bool"
      },
      {
        "ordinal": 10,
        "name": "position",
        "type_info": "Int2"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "TextArray",
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      null,
      false,
      null,
      null,
      null,
      false
    ]
  },
  "hash": "dde0ea9311fc1e4b0e300b9c9051282e1899b0d9c15567c9a15d0e39484cbb37"
}
